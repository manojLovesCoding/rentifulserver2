"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);
var chunk_Q6ZVYPDB_exports = {};
__export(chunk_Q6ZVYPDB_exports, {
  loadEnvFile: () => loadEnvFile
});
module.exports = __toCommonJS(chunk_Q6ZVYPDB_exports);
var import_chunk_WCPUXXL2 = require("./chunk-WCPUXXL2.js");
var import_chunk_2IP7H3BQ = require("./chunk-2IP7H3BQ.js");
async function loadEnvFile({
  schemaPath,
  config,
  printMessage = false
}) {
  if (config.loadedFromFile) {
    process.stdout.write(`Prisma config detected, skipping environment variable loading.
`);
    return;
  }
  const envPaths = await (0, import_chunk_WCPUXXL2.getEnvPaths)(schemaPath);
  const envData = (0, import_chunk_2IP7H3BQ.tryLoadEnvs)(envPaths, { conflictCheck: "error" });
  if (printMessage && envData && envData.message) {
    process.stdout.write(envData.message + "\n");
  }
}
